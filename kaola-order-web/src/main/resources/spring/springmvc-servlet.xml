<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:conf/resouces.properties" />

    <!-- 启用注解，并定义组件查找规则 ，mvc层只负责扫描@Controller  -->
    <context:component-scan base-package="com.kaola.order.web.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <mvc:annotation-driven/>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.kaola.order.web.controller.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 引用dubbo服务 -->
    <dubbo:application name="kaola-order-web"/>
    <dubbo:registry protocol="zookeeper" address="116.196.122.90:2181"/>
    <dubbo:reference interface="com.kaola.cart.service.CartService" id="cartService" />
    <dubbo:reference interface="com.kaola.sso.service.TokenService" id="tokenService" />
    <dubbo:reference interface="com.kaola.order.service.OrderService" id="orderService" />





    <!-- 根据客户端的不同请求决定不同的view进行响应,如：/blog/1.json、/blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="contentType" value="text/html"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="mediaTypes">
            <props>
                <prop key="html">text/html</prop>
                <prop key="xml">application/xml</prop>
                <prop key="json">application/json</prop>
            </props>
        </property>
    </bean>
</beans>